name: Unit Tests & PNG Verification

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Run unit tests
      run: npm run test:unit

    - name: Verify stable seed PNG images are up-to-date
      run: npm run test:verify-pngs

    - name: Upload test artifacts if PNG verification fails
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: png-verification-failure
        path: |
          test/map-images/
          tmp/verification-pngs/
        retention-days: 7
        if-no-files-found: ignore

    - name: Comment on PR if PNG verification fails
      if: failure() && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const commentBody = `## üñºÔ∏è Stable Seed PNG Verification Failed

‚ùå **The stable seed PNG images are out of date.** The world generation algorithm has changed, but the committed PNG images don't reflect these changes.

### üîß How to fix this:

1. **Regenerate the images:**
   \`\`\`bash
   npm run test:generate-pngs
   \`\`\`

2. **Commit the updated images:**
   \`\`\`bash
   git add test/map-images/
   git commit -m "Update stable seed PNG images"
   git push
   \`\`\`

3. **Re-run the CI to verify the fix**

### üìã Why this check exists:

This ensures that:
- PNG images always reflect the current world generation algorithm
- Visual regressions are caught immediately
- The stable seed test suite provides consistent reference images

The PNG verification compares newly generated images with the committed versions and fails if they differ.

*This comment was automatically generated by the PNG verification workflow.*`;

          try {
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });
            console.log('Successfully posted PNG verification failure comment');
          } catch (error) {
            console.error('Failed to post comment:', error.message);
          }